const express = require('express');
const router = express.Router();
const db = require('../db');

// üìå GET reactions c·ªßa 1 post
router.get('/:postID', async (req, res) => {
  const { postID } = req.params;
  try {
    const [rows] = await db.query(
      `SELECT emoji, COUNT(*) AS count
       FROM Reaction
       WHERE postID = ?
       GROUP BY emoji`,
      [postID]
    );
    const reactions = {};
    rows.forEach(r => { reactions[r.emoji] = r.count });
    res.json(reactions);
  } catch (err) {
    console.error('‚ùå Error fetching reactions:', err);
    res.status(500).json({ error: 'Failed to fetch reactions' });
  }
});

// üìå POST add reaction (tr·∫£ count m·ªõi)
router.post('/:postID', async (req, res) => {
  const { postID } = req.params;
  const { emoji, userID } = req.body;

  try {
    // Ki·ªÉm tra ƒë√£ c√≥ reaction n√†y ch∆∞a
    const [existing] = await db.query(
      `SELECT * FROM Reaction 
       WHERE postID = ? AND userID = ? AND emoji = ?`,
      [postID, userID, emoji]
    );

    if (existing.length > 0) {
      return res.status(409).json({ message: 'Reaction already exists' });
    }

    // Th√™m reaction m·ªõi
    await db.query(
      `INSERT INTO Reaction (userID, targetType, postID, emoji, createAt)
       VALUES (?, 'post', ?, ?, NOW())`,
      [userID, postID, emoji]
    );

    // L·∫•y count m·ªõi cho emoji n√†y
    const [[countRow]] = await db.query(
      `SELECT COUNT(*) AS count 
       FROM Reaction 
       WHERE postID = ? AND emoji = ?`,
      [postID, emoji]
    );

    res.status(201).json({ emoji, count: countRow.count });
  } catch (err) {
    console.error('‚ùå Error adding reaction:', err);
    res.status(500).json({ error: 'Failed to add reaction' });
  }
});

// üìå DELETE remove reaction (tr·∫£ count m·ªõi)
router.delete('/:postID', async (req, res) => {
  const { postID } = req.params;
  const { emoji, userID } = req.body;

  try {
    // Xo√° reaction
    await db.query(
      `DELETE FROM Reaction 
       WHERE postID = ? AND userID = ? AND emoji = ?`,
      [postID, userID, emoji]
    );

    // L·∫•y count m·ªõi cho emoji n√†y
    const [[countRow]] = await db.query(
      `SELECT COUNT(*) AS count 
       FROM Reaction 
       WHERE postID = ? AND emoji = ?`,
      [postID, emoji]
    );

    res.json({ emoji, count: countRow.count });
  } catch (err) {
    console.error('‚ùå Error removing reaction:', err);
    res.status(500).json({ error: 'Failed to remove reaction' });
  }
});

module.exports = router;
